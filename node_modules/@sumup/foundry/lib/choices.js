"use strict";
/**
 * Copyright 2020, SumUp Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.getAllChoiceCombinations = exports.enumToChoices = void 0;
const fp_1 = require("lodash/fp");
function enumToChoices(enums) {
    return Object.values(enums);
}
exports.enumToChoices = enumToChoices;
function getAllChoiceCombinations(possibleChoices) {
    return Object.entries(possibleChoices).reduce((acc, [optionName, choices]) => {
        const isMultiple = fp_1.isArray(choices);
        const choiceEnum = isMultiple ? choices[0] : choices;
        const choicesForOption = Object.values(choiceEnum);
        const allCombinations = [];
        acc.forEach((combination) => {
            choicesForOption.forEach((value) => {
                const choice = isMultiple ? [value] : value;
                allCombinations.push(Object.assign(Object.assign({}, combination), { [optionName]: choice }));
            });
        });
        return allCombinations;
    }, [{}]);
}
exports.getAllChoiceCombinations = getAllChoiceCombinations;
